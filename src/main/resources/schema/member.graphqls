schema {
    query: Query
    mutation: Mutation
}

# READ
type Query {
    findMemberById(id: Int): Member
    findMembers: [Member]
}

type Member {
    id: ID!
    name: String!
    # type, input 의 혼용은 불가능 함 : 2개의 값이 정확히 동일해도 각각 정의 내려야 함.
    company(company: Company = COMMERCE): Company
    teams: [Team!]!
    createdAt: DateTime!
}

enum Company {
    COMMERCE
    ACCOMMATE
    WETOO
}

type Team {
    """
    팀번호
    """
    no: ID!
    """
    팀명
    """
    name: String!
    createdAt: DateTime!
}

# CREATE, UPDATE, DELETE
type Mutation {
    createMember(name: String, memberInput: MemberInput): Member
}

input MemberInput {
    company: Company
    teamInput: [TeamInput!]!
}

input TeamInput {
    name: String
}


scalar DateTime

# 추가..
interface Server {
    id: ID!
    ip: String!
}

type CloudServer implements Server {
    id: ID!
    ip: String!
}

type PhysicalServer implements Server {
    id: ID!
    ip: String!
    pricePerSec: Int!
}







